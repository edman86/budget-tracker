{"version":3,"sources":["context/contextReducer.js","context/context.js","components/Header/Header.jsx","constants/categories.js","useTransactions.js","components/Details/DetailStyles.js","components/Details/Details.jsx","utils/formatDate.js","components/TransactionDialog/TransactionDialog.jsx","components/Filter/Filter.jsx","constants/filters.js","components/List/List.jsx","utils/filterTransactions.js","utils/sortDate.js","components/Main/MainStyles.js","components/Main/Main.jsx","components/InfoBalance/InfoBalance.jsx","utils/createDate.js","components/Form/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["contextReducer","state","action","transactions","type","payload","localStorage","setItem","JSON","stringify","filter","t","id","initialState","parse","getItem","ExpenseTrackerContext","createContext","Provider","children","useReducer","dispatch","balance","reduce","acc","currentVal","amount","value","addTransaction","transaction","deleteTransaction","Header","AppBar","sx","py","position","Container","maxWidth","Toolbar","Grid","container","direction","alignItems","item","Typography","variant","incomeColors","expenseColors","incomeCategories","color","expenseCategories","useTransactions","title","forEach","c","transactionsPerType","useContext","total","sum","current","categories","category","find","filteredCategories","chartData","datasets","data","map","backgroundColor","labels","useStyles","income","borderBottom","expense","Details","styles","Card","toLowerCase","CardHeader","CardContent","component","length","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","join","BootstrapDialog","styled","Dialog","theme","padding","spacing","BootstrapDialogTitle","props","onClose","other","DialogTitle","m","p","IconButton","onClick","right","top","palette","grey","TransactionDialog","open","setOpen","transactionData","details","handleClose","green","red","DialogContent","dividers","minWidth","gutterBottom","Filter","filters","setFilters","handleClick","filterType","updatedFilters","active","justifyContent","mt","pb","Chip","label","onDelete","filtersData","List","useState","isTransactionOpen","setTransactionOpen","setTransactionData","filteredTransactions","activeFilters","includes","today","currentDate","todayFilter","transactionDate","getTime","dayOfWeek","getDay","firstDayOfCurrentWeek","lastDayOfCurrentWeek","currentWeekFilter","currentMonth","currentYear","currentMonthFilter","onlyIncomeFilter","onlyExpenseFilter","filterTransactions","sortedTransactions","sort","a","b","reverse","dense","maxHeight","overflow","Slide","in","mountOnEnter","unmountOnExit","ListItem","button","console","log","ListItemAvatar","Avatar","AttachMoney","MoneyOff","ListItemText","primary","secondary","ListItemSecondaryAction","edge","Delete","media","height","pt","expand","transform","ml","transition","transitionDuration","expandOpen","cartContent","divider","mx","my","Main","align","Divider","xs","InfoBalance","fontWeight","createDate","dataDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","Form","setErrorSnackbarOpen","setSuccessSnackbarOpen","formData","setFormData","segment","useSpeechContext","createTransaction","Number","uuidv4","selectedCategories","useEffect","intent","isFinal","entities","e","charAt","toUpperCase","slice","toLocaleLowerCase","iC","eC","lineHeight","mb","fontStyle","words","word","md","FormControl","fullWidth","InputLabel","Select","onChange","target","MenuItem","TextField","Button","StyledFab","Fab","zIndex","left","bottom","App","isFormOpen","setFormOpen","isErrorSnackbarOpen","isSuccessSnackbarOpen","speechState","main","useRef","SpeechState","Recording","scrollIntoView","sm","order","ref","Snackbar","autoHideDuration","Alert","severity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","appId","language","document","getElementById"],"mappings":"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","file":"static/js/main.65838dc0.chunk.js","sourcesContent":["const contextReducer = (state, action) => {\r\n    let transactions;\r\n    \r\n    switch (action.type) {\r\n        case 'ADD_TRANSACTION':\r\n            transactions = [...state, action.payload];\r\n            localStorage.setItem('transactions', JSON.stringify(transactions));\r\n            return transactions;\r\n            \r\n        case 'DELETE_TRANSACTION':\r\n            transactions = state.filter(t => t.id !== action.payload);\r\n            localStorage.setItem('transactions', JSON.stringify(transactions));\r\n            return transactions;\r\n        \r\n        default:\r\n            return state;        \r\n    }\r\n};\r\n\r\nexport default contextReducer;","import React, { useReducer, createContext } from 'react';\r\nimport contextReducer from './contextReducer';\r\n\r\n\r\nconst initialState = JSON.parse(localStorage.getItem('transactions')) || [];\r\n\r\nexport const ExpenseTrackerContext = createContext(initialState);\r\n\r\nexport const Provider = ({ children }) => {\r\n    const [transactions, dispatch] = useReducer(contextReducer, initialState);\r\n\r\n    // Action Creators\r\n    \r\n    const addTransaction = (transaction) => {\r\n        dispatch({type: 'ADD_TRANSACTION', payload: transaction});\r\n    };\r\n\r\n    const deleteTransaction = (id) => {\r\n        dispatch({type: 'DELETE_TRANSACTION', payload: id});\r\n    };\r\n\r\n    const balance = transactions.reduce((acc, currentVal) => {\r\n        return (currentVal.type === 'Expense' ? \r\n            acc - currentVal.amount : acc + currentVal.amount)\r\n    }, 0);\r\n    \r\n    return (\r\n        <ExpenseTrackerContext.Provider value={{\r\n            transactions,\r\n            addTransaction,\r\n            deleteTransaction,\r\n            balance\r\n        }}>\r\n            {children}\r\n        </ExpenseTrackerContext.Provider>\r\n    );\r\n};","import { AppBar, Toolbar, Typography, Grid, Container } from \"@mui/material\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <AppBar sx={{py: '0.5em'}} position=\"static\">\r\n            <Container maxWidth=\"lg\">\r\n                <Toolbar>\r\n                    <Grid \r\n                        container\r\n                        direction=\"column\"\r\n                        alignItems=\"flex-start\"\r\n                    >\r\n                        <Grid item>\r\n                            <Typography variant=\"h4\">\r\n                                Budget Tracker\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"subtitle2\">\r\n                                Powered by Speechly\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Header;","const incomeColors = ['#123123', '#154731', '#165f40', '#16784f', '#14915f', '#10ac6e', '#0bc77e', '#04e38d', '#00ff9d', '#5dfcbf'];\r\nconst expenseColors = ['#b50d12', '#bf2f1f', '#c9452c', '#d3583a', '#dc6a48', '#e57c58', '#ee8d68', '#f79d79', '#ffae8a', '#cc474b', '#f55b5f', '#f7777a', '#f58284'];\r\n\r\nexport const incomeCategories = [\r\n    { type: 'Business', amount: 0, color: incomeColors[0] },\r\n    { type: 'Investments', amount: 0, color: incomeColors[1] },\r\n    { type: 'Extra income', amount: 0, color: incomeColors[2] },\r\n    { type: 'Deposits', amount: 0, color: incomeColors[3] },\r\n    { type: 'Lottery', amount: 0, color: incomeColors[4] },\r\n    { type: 'Gifts', amount: 0, color: incomeColors[5] },\r\n    { type: 'Salary', amount: 0, color: incomeColors[6] },\r\n    { type: 'Savings', amount: 0, color: incomeColors[7] },\r\n    { type: 'Rental income', amount: 0, color: incomeColors[8] },\r\n    { type: 'Part-time job', amount: 0, color: incomeColors[9] },\r\n];\r\n\r\nexport const expenseCategories = [\r\n    { type: 'Food', amount: 0, color: expenseColors[0] },\r\n    { type: 'Public transport', amount: 0, color: expenseColors[1] },\r\n    { type: 'Clothes', amount: 0, color: expenseColors[2] },\r\n    { type: 'Travel', amount: 0, color: expenseColors[3] },\r\n    { type: 'Bills', amount: 0, color: expenseColors[4] },\r\n    { type: 'Shopping', amount: 0, color: expenseColors[5] },\r\n    { type: 'House', amount: 0, color: expenseColors[6] },\r\n    { type: 'Entertainment', amount: 0, color: expenseColors[7] },\r\n    { type: 'Phone', amount: 0, color: expenseColors[8] },\r\n    { type: 'Pets', amount: 0, color: expenseColors[9] },\r\n    { type: 'Internet', amount: 0, color: expenseColors[10] },\r\n    { type: 'Car', amount: 0, color: expenseColors[11] },\r\n    { type: 'Other', amount: 0, color: expenseColors[12] },\r\n];\r\n\r\nexport const resetCategories = () => {\r\n    incomeCategories.forEach((c) => c.amount = 0);\r\n    expenseCategories.forEach((c) => c.amount = 0);\r\n};","import { useContext } from 'react';\r\nimport { ExpenseTrackerContext } from './context/context';\r\n\r\nimport { incomeCategories, expenseCategories, resetCategories } from './constants/categories';\r\n\r\nconst useTransactions = (title) => {\r\n    resetCategories();\r\n\r\n    const { transactions } = useContext(ExpenseTrackerContext);\r\n    const transactionsPerType = transactions.filter(t => t.type === title);\r\n    const total = transactionsPerType.reduce((sum, current) => sum += current.amount, 0);\r\n    const categories = title === \"Income\" ? incomeCategories : expenseCategories;\r\n\r\n    transactionsPerType.forEach(t => {\r\n        const category = categories.find(c => c.type === t.category);\r\n\r\n        if (category) {\r\n            category.amount += t.amount;\r\n        }\r\n    });\r\n\r\n    const filteredCategories = categories.filter(c => c.amount > 0);\r\n\r\n    const chartData = {\r\n        datasets: [{\r\n            data: filteredCategories.map(c => c.amount),\r\n            backgroundColor: filteredCategories.map(c => c.color) \r\n        }],\r\n        labels: filteredCategories.map(c => c.type)\r\n    };\r\n\r\n    return {\r\n        total,\r\n        chartData\r\n    }\r\n\r\n}\r\n\r\nexport default useTransactions;","const useStyles = () => {\r\n    return {\r\n        income: {\r\n            borderBottom: '10px solid rgba(0, 255, 0, 0.5)'\r\n        },\r\n        expense: {\r\n            borderBottom: '10px solid rgba(255, 0, 0, 0.5)'\r\n        }\r\n    }\r\n};\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport { Card, CardHeader, CardContent, Typography } from '@mui/material';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport useTransactions from '../../useTransactions';\r\n\r\nimport useStyles from './DetailStyles';\r\n\r\nconst Details = ({ title }) => {\r\n    \r\n    const styles = useStyles();\r\n    const { total, chartData } = useTransactions(title);\r\n    \r\n    const initialChart = {\r\n        datasets: [{\r\n            data: [100],\r\n            backgroundColor: '#edeef0' \r\n        }],\r\n        labels: ['No transactions']\r\n    };\r\n    \r\n    return (\r\n        <Card sx={styles[title.toLowerCase()]}>\r\n            <CardHeader title={title} />\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h5\">\r\n                    {`$${total}`}\r\n                </Typography>\r\n                <Doughnut data={chartData.datasets[0].data.length ? chartData : initialChart} />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Details;","const formatDate = (date) => {\r\n    const d = new Date(date);\r\n    let month = `${d.getMonth() + 1}`;\r\n    let day = `${d.getDate()}`;\r\n    const year = d.getFullYear();\r\n\r\n    if (month.length < 2) {\r\n        month = `0${month}`;\r\n    }\r\n\r\n    if (day.length < 2) {\r\n        day = `0${day}`;\r\n    }\r\n\r\n    return [year, month, day].join('-');\r\n};\r\n\r\nexport default formatDate;","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Typography from '@mui/material/Typography';\r\nimport { red, green } from '@mui/material/colors';\r\nimport formatDate from '../../utils/formatDate';\r\n\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuDialogContent-root': {\r\n        padding: theme.spacing(2),\r\n    },\r\n    '& .MuDialogActions-root': {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst BootstrapDialogTitle = (props) => {\r\n    const { children, onClose, ...other } = props;\r\n\r\n    return (\r\n        <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n            {children}\r\n            {onClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={onClose}\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        right: 8,\r\n                        top: 8,\r\n                        color: (theme) => theme.palette.grey[500],\r\n                    }}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </DialogTitle>\r\n    );\r\n};\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function TransactionDialog({ open, setOpen, transactionData }) {\r\n\r\n    const { amount, category, type, date, details } = transactionData;\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <BootstrapDialog\r\n                onClose={handleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={open}\r\n            >\r\n                <BootstrapDialogTitle \r\n                    id=\"customized-dialog-title\" \r\n                    onClose={handleClose} \r\n                    sx={{\r\n                        borderBottom: `10px solid ${type === \"Income\" ? green[300] : red[300]}`\r\n                    }}\r\n                >\r\n                    {`${type} Transaction`}\r\n                </BootstrapDialogTitle>\r\n                <DialogContent dividers sx={{minWidth: '400px'}}>\r\n                    <Typography gutterBottom>\r\n                        {`Type: ${type}`}\r\n                    </Typography>\r\n                    <Typography gutterBottom>\r\n                        {`Category: ${category}`}   \r\n                    </Typography>\r\n                    <Typography gutterBottom>\r\n                        {`Date: ${formatDate(date)}`}\r\n                    </Typography>\r\n                    <Typography gutterBottom>\r\n                        {`Amount: $${amount}`}\r\n                    </Typography>\r\n                    <Typography gutterBottom>\r\n                        {`Details: ${details}`}\r\n                    </Typography>\r\n                </DialogContent>\r\n            </BootstrapDialog>\r\n        </div>\r\n    );\r\n}","import { Grid, Chip } from \"@mui/material\";\r\n\r\n\r\nconst Filter = ({ filters, setFilters }) => {\r\n    \r\n    const handleClick = (filterType) => {\r\n        const updatedFilters = filters.map(filter => {\r\n            if (filter.type === filterType) {\r\n                return {\r\n                    ...filter,\r\n                    active: !filter.active\r\n                };\r\n            } else {\r\n                return filter;\r\n            } \r\n        })\r\n\r\n        setFilters(updatedFilters);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={1} justifyContent=\"center\" sx={{mt: 1, pb: 1}}>\r\n                {filters.map(filter => {\r\n                    \r\n                    return !filter.active ? (\r\n                        <Grid item key={filter.id}>\r\n                            <Chip label={filter.type} variant=\"outlined\" onClick={ () => handleClick(filter.type) } />\r\n                        </Grid>\r\n                    ) : (\r\n                        <Grid item key={filter.id}>\r\n                            <Chip label={filter.type} onDelete={ () => handleClick(filter.type) } />\r\n                        </Grid>\r\n                    )\r\n                    \r\n                })}\r\n                \r\n            </Grid>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default Filter;","export const filtersData = [\r\n    {id: 1, type: 'Today', active: false},\r\n    {id: 2, type: 'Current week', active: false},\r\n    {id: 3, type: 'Current month', active: false},\r\n    {id: 4, type: 'Only Income', active: false},\r\n    {id: 5, type: 'Only Expense', active: false}\r\n]","import { useState, useContext } from 'react';\r\nimport {\r\n    List as MUIList,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    Avatar,\r\n    ListItemSecondaryAction,\r\n    IconButton,\r\n    Slide,\r\n} from '@mui/material';\r\n\r\nimport { red } from '@mui/material/colors';\r\nimport { green } from '@mui/material/colors';\r\n\r\nimport { Delete, AttachMoney, MoneyOff } from '@mui/icons-material';\r\nimport { ExpenseTrackerContext } from '../../context/context';\r\n\r\nimport TransactionDialog from '../TransactionDialog/TransactionDialog';\r\n\r\nimport sortDate from '../../utils/sortDate';\r\nimport formatDate from '../../utils/formatDate';\r\nimport filterTransactions from '../../utils/filterTransactions';\r\nimport Filter from '../Filter/Filter';\r\nimport { filtersData } from \"../../constants/filters\";\r\n\r\n\r\nconst List = () => {\r\n    const { transactions, deleteTransaction } = useContext(ExpenseTrackerContext);\r\n    const [isTransactionOpen, setTransactionOpen] = useState(false);\r\n    const [transactionData, setTransactionData] = useState({\r\n        id: 1,\r\n        amount: '',\r\n        category: '',\r\n        type: '',\r\n        date: new Date()\r\n    });\r\n    const [filters, setFilters] = useState(filtersData);\r\n\r\n    const handleItemClick = (value) => {\r\n        setTransactionOpen(true);\r\n        setTransactionData(value);\r\n        console.log(value);\r\n    }\r\n\r\n    const filteredTransactions = filterTransactions(transactions, filters);\r\n    const sortedTransactions = sortDate(filteredTransactions);\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Filter filters={filters} setFilters={setFilters} />\r\n            </div>\r\n\r\n            <MUIList\r\n                dense={false}\r\n                sx={{ maxHeight: '300px', overflow: 'auto' }}\r\n            >\r\n                {sortedTransactions.map((transaction) => (\r\n                    <Slide\r\n                        direction=\"down\"\r\n                        in\r\n                        mountOnEnter\r\n                        unmountOnExit\r\n                        key={transaction.id}\r\n                    >\r\n                        <ListItem button key={transaction.id} onClick={() => handleItemClick(transaction)}>\r\n                            <ListItemAvatar>\r\n                                <Avatar sx={{ backgroundColor: transaction.type === \"Income\" ? green[500] : red[500] }}>\r\n                                    {transaction.type === \"Income\" ? <AttachMoney /> : <MoneyOff />}\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n\r\n                            <ListItemText\r\n                                primary={transaction.category}\r\n                                secondary={`$${transaction.amount} - ${formatDate(transaction.date)}`}\r\n                            />\r\n\r\n                            <ListItemSecondaryAction>\r\n                                <IconButton\r\n                                    edge=\"end\"\r\n                                    aria-label=\"delete\"\r\n                                    onClick={() => deleteTransaction(transaction.id)}\r\n                                >\r\n                                    <Delete />\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n\r\n                        </ListItem>\r\n                    </Slide>\r\n                ))}\r\n            </MUIList>\r\n\r\n            <TransactionDialog\r\n                open={isTransactionOpen}\r\n                setOpen={setTransactionOpen}\r\n                transactionData={transactionData}\r\n            />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default List;","export default function filterTransactions(transactions, filters) {\r\n    const activeFilters = filters.map(filter => filter.active ? filter.type : null)\r\n\r\n    let filteredTransactions = [...transactions];\r\n\r\n    if (activeFilters.includes('Today')) {\r\n        const today = new Date();\r\n        const day = today.getDate();\r\n        const month = today.getMonth();\r\n        const year = today.getFullYear();\r\n        const currentDate = new Date(year, month, day);\r\n\r\n        const todayFilter = filteredTransactions.filter(transaction => {\r\n            const transactionDate = new Date(transaction.date);\r\n            const day = transactionDate.getDate();\r\n            const month = transactionDate.getMonth();\r\n            const year = transactionDate.getFullYear();\r\n\r\n            return new Date(year, month, day).getTime() === currentDate.getTime();\r\n        })\r\n\r\n        filteredTransactions = [...todayFilter];\r\n\r\n    } else if (activeFilters.includes('Current week')) {\r\n        const today = new Date();\r\n        const currentDate = today.getDate();\r\n        let dayOfWeek = today.getDay();\r\n        if (dayOfWeek === 0) {\r\n            dayOfWeek = 7;\r\n        }\r\n        const firstDayOfCurrentWeek = currentDate - (dayOfWeek - 1);\r\n        const lastDayOfCurrentWeek = firstDayOfCurrentWeek + 7;\r\n        \r\n        const currentWeekFilter = filteredTransactions.filter(transaction => {\r\n            return (\r\n                new Date(transaction.date).getTime() \r\n                >= \r\n                new Date(today.getFullYear(), today.getMonth(), firstDayOfCurrentWeek).getTime()\r\n                &&\r\n                new Date(transaction.date).getTime()\r\n                <=\r\n                new Date(today.getFullYear(), today.getMonth(), lastDayOfCurrentWeek).getTime()        \r\n            )    \r\n        });\r\n\r\n        filteredTransactions = [...currentWeekFilter];\r\n    } else if (activeFilters.includes('Current month')) {\r\n        const today = new Date();\r\n        const currentMonth = today.getMonth();\r\n        const currentYear = today.getFullYear();\r\n\r\n        const currentMonthFilter = filteredTransactions.filter(transaction => {\r\n            return (\r\n                new Date(transaction.date).getMonth() === currentMonth\r\n                &&\r\n                new Date(transaction.date).getFullYear() === currentYear\r\n            )\r\n        });\r\n\r\n        filteredTransactions = [...currentMonthFilter];\r\n    }\r\n\r\n    if (activeFilters.includes('Only Income')) {\r\n        const onlyIncomeFilter = filteredTransactions.filter(transaction => {\r\n            return transaction.type === 'Income';\r\n        });\r\n\r\n        filteredTransactions = [...onlyIncomeFilter];\r\n\r\n    } else if (activeFilters.includes('Only Expense')) {\r\n        const onlyExpenseFilter = filteredTransactions.filter(transaction => {\r\n            return transaction.type === 'Expense';\r\n        });\r\n        \r\n        filteredTransactions = [...onlyExpenseFilter];\r\n    }\r\n\r\n    return filteredTransactions;\r\n\r\n}","export default function sortDate(arr) {\r\n    return arr.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime()).reverse();\r\n}","const useStyles = () => {\r\n    return {\r\n        media: {\r\n            height: 0,\r\n            pt: '56.25%', // 16:9\r\n        },\r\n        expand: {\r\n            transform: 'rotate(0deg)',\r\n            ml: 'auto',\r\n            transition: 'transform',\r\n            transitionDuration: '1s'\r\n        },\r\n        expandOpen: {\r\n            transform: 'rotate(180deg)',\r\n        },\r\n        cartContent: {\r\n            pt: 0,\r\n        },\r\n        divider: {\r\n            mx: '0',\r\n            my: '20px'\r\n        },\r\n    \r\n    };\r\n};\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid, Chip, Divider } from '@mui/material';\r\n\r\nimport List from '../List/List';\r\n\r\nimport useStyles from './MainStyles';\r\n\r\n\r\nconst Main = () => {\r\n    const styles = useStyles();\r\n\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Typography\r\n                    variant=\"h5\"\r\n                    align=\"center\"\r\n                    component=\"h5\"\r\n                >\r\n                    Transactions\r\n                </Typography>\r\n            </CardContent>\r\n\r\n            <Divider />\r\n\r\n            <CardContent sx={styles.cartContent}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <List />\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Main;","import { useContext } from 'react';\r\nimport { ExpenseTrackerContext } from '../../context/context';\r\nimport { Card, CardContent, Typography } from '@mui/material';\r\n\r\n\r\nconst InfoBalance = () => {\r\n    const { balance } = useContext(ExpenseTrackerContext);\r\n    \r\n    return (\r\n        <Card variant=\"outlined\">\r\n            <CardContent>\r\n                <Typography \r\n                    align=\"center\"\r\n                    variant=\"h5\"\r\n                    component=\"div\"\r\n                >\r\n                    <Typography variant=\"h5\" component=\"h5\">Total Balance</Typography>\r\n                    <Typography variant=\"h5\" component=\"h5\" sx={{fontWeight: 'bold'}}>{`$${balance}`}</Typography>\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default InfoBalance;","export default function createDate(date) {\r\n    const currentDate = new Date();\r\n    const dataDate = new Date(date);\r\n\r\n    dataDate.setHours(currentDate.getHours());\r\n    dataDate.setMinutes(currentDate.getMinutes());\r\n    dataDate.setSeconds(currentDate.getSeconds());\r\n    \r\n    return dataDate;\r\n}","import { useState, useContext, useEffect } from \"react\";\r\nimport { ExpenseTrackerContext } from \"../../context/context\";\r\nimport {\r\n    TextField,\r\n    Typography,\r\n    Grid,\r\n    Divider,\r\n    Button,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n} from \"@mui/material\";\r\nimport { PushToTalkButton, PushToTalkButtonContainer, ErrorPanel } from '@speechly/react-ui';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { incomeCategories, expenseCategories } from '../../constants/categories';\r\nimport { useSpeechContext } from \"@speechly/react-client\";\r\nimport createDate from '../../utils/createDate';\r\nimport formatDate from '../../utils/formatDate';\r\n\r\n\r\nconst initialState = {\r\n    amount: '',\r\n    category: '',\r\n    type: '',\r\n    date: '',\r\n    details: ''\r\n};\r\n\r\nconst Form = ({ setErrorSnackbarOpen, setSuccessSnackbarOpen }) => {\r\n    const [formData, setFormData] = useState(initialState);\r\n    const { addTransaction } = useContext(ExpenseTrackerContext);\r\n    const { segment } = useSpeechContext();\r\n\r\n    const createTransaction = () => {\r\n\r\n        if (!formData.type || !formData.category || !formData.amount) {\r\n            setErrorSnackbarOpen(true);\r\n            return;\r\n        }\r\n\r\n        const transaction = {\r\n            ...formData,\r\n            amount: Number(formData.amount),\r\n            id: uuidv4()\r\n        }\r\n\r\n        addTransaction(transaction);\r\n        setSuccessSnackbarOpen(true);\r\n        setFormData(initialState);\r\n    };\r\n\r\n    const selectedCategories = formData.type === \"Income\" ? incomeCategories : expenseCategories;\r\n\r\n    useEffect(() => {\r\n        if (segment) {\r\n            if (segment.intent.intent === 'add_expense') {\r\n                setFormData({ ...formData, type: 'Expense' });\r\n            } else if (segment.intent.intent === 'add_income') {\r\n                setFormData({ ...formData, type: 'Income' });\r\n            } else if (segment.isFinal && segment.intent.intent === \"create_transaction\") {\r\n                createTransaction();\r\n            } else if (segment.isFinal && segment.intent.intent === \"cancel_transaction\") {\r\n                return setFormData(initialState);\r\n            }\r\n\r\n            segment.entities.forEach(e => {\r\n                const category = `${e.value.charAt(0).toUpperCase()}${e.value.slice(1).toLocaleLowerCase()}`\r\n\r\n                switch (e.type) {\r\n                    case 'amount':\r\n                        setFormData({ ...formData, amount: e.value });\r\n                        break;\r\n                    case 'category':\r\n                        if (incomeCategories.map(iC => iC.type).includes(category)) {\r\n                            setFormData({ ...formData, type: 'Income', category: category });\r\n                        } else if (expenseCategories.map(eC => eC.type).includes(category)) {\r\n                            setFormData({ ...formData, type: 'Expense', category: category });\r\n                        }\r\n                        break;\r\n                    case 'date':\r\n                        setFormData({ ...formData, date: e.value });\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n\r\n            if (segment.isFinal\r\n                && formData.amount\r\n                && formData.category\r\n                && formData.type\r\n                && formData.date) {\r\n                createTransaction();\r\n            }\r\n        }\r\n    }, [segment]);\r\n    \r\n    return (\r\n        <Grid container spacing={2}>\r\n\r\n            <Grid item xs={12}>\r\n                <Typography \r\n                    variant=\"subtitle1\"\r\n                    align=\"center\"\r\n                    sx={{lineHeight: '1.5', mt: '1em', fontWeight: 'bold'}}\r\n                >\r\n                    To add transaction with vois:\r\n                </Typography>\r\n                \r\n                <Typography \r\n                    variant=\"subtitle1\"\r\n                    align=\"center\"\r\n                    sx={{lineHeight: '1.5'}}\r\n                >\r\n                    Push the michrofon button and try saying for example: \r\n                </Typography>\r\n                \r\n                <Typography \r\n                    variant=\"subtitle1\"\r\n                    align=\"center\"\r\n                    sx={{lineHeight: '1.5', mb: '1em', fontStyle: 'italic'}}\r\n                >\r\n                    \"Add income for $100 in Category Salary for Monday\" \r\n                </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <Divider sx={{mb: '1em'}} />\r\n                <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n                    {segment && (\r\n                        <>\r\n                            {segment.words.map(word => word.value).join(\" \")}\r\n                        </>\r\n                    )}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={6} md={6}>\r\n                <FormControl variant=\"standard\" fullWidth>\r\n                    <InputLabel>Type</InputLabel>\r\n                    <Select\r\n                        value={formData.type}\r\n                        onChange={(e) => setFormData({ ...formData, type: e.target.value })}\r\n                    >\r\n                        <MenuItem value=\"Income\">Income</MenuItem>\r\n                        <MenuItem value=\"Expense\">Expense</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={6} md={6}>\r\n                <FormControl variant=\"standard\" fullWidth>\r\n                    <InputLabel>Category</InputLabel>\r\n                    <Select\r\n                        value={formData.category}\r\n                        onChange={(e) => setFormData({ ...formData, category: e.target.value })}\r\n                    >\r\n                        {selectedCategories.map(category => (\r\n                            <MenuItem key={category.type} value={category.type}>\r\n                                {category.type}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={6} md={6}>\r\n                <TextField\r\n                    type=\"number\"\r\n                    label=\"Amount\"\r\n                    variant=\"standard\"\r\n                    fullWidth\r\n                    value={formData.amount}\r\n                    onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6} md={6}>\r\n                <TextField\r\n                    type=\"date\"\r\n                    label=\"Date\"\r\n                    variant=\"standard\"\r\n                    fullWidth\r\n                    value={formatDate(formData.date)}\r\n                    onChange={(e) => setFormData({ ...formData, date: createDate(e.target.value) })}\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={12}>\r\n                <TextField\r\n                    type=\"text\"\r\n                    label=\"Details\"\r\n                    variant=\"standard\"\r\n                    fullWidth\r\n                    value={formData.details}\r\n                    onChange={(e) => setFormData({ ...formData, details: e.target.value })}\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sx={{m: '1.5em 0 2em'}}>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    onClick={createTransaction}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </Grid>\r\n\r\n            <PushToTalkButtonContainer>\r\n                <PushToTalkButton />\r\n                <ErrorPanel />\r\n            </PushToTalkButtonContainer>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Form;","import { useEffect, useRef, useState, useContext } from 'react';\nimport { ExpenseTrackerContext } from './context/context';\nimport Header from './components/Header/Header';\nimport Details from './components/Details/Details';\nimport Main from './components/Main/Main';\nimport InfoBalance from './components/InfoBalance/InfoBalance';\nimport Form from './components/Form/Form';\nimport { styled, Container, Grid, Fab, Dialog, DialogContent, Snackbar, Alert } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport { SpeechState, useSpeechContext } from '@speechly/react-client';\n\n\nconst StyledFab = styled(Fab)({\n    position: 'fixed',\n    zIndex: 10,\n    left: 'auto',\n    right: 100,\n    bottom: 100,\n});\n\n\nfunction App() {\n    const [isFormOpen, setFormOpen] = useState(false);\n    const [isErrorSnackbarOpen, setErrorSnackbarOpen] = useState(false);\n    const [isSuccessSnackbarOpen, setSuccessSnackbarOpen] = useState(false);\n    const { speechState } = useSpeechContext();\n    const { transactions } = useContext(ExpenseTrackerContext);\n    const main = useRef(null);\n\n    const executeScroll = () => main.current.scrollIntoView();\n\n    const handleFabClick = () => {\n        setFormOpen(true);\n    };\n    const handleFabClose = () => {\n        setFormOpen(false);\n    };\n\n    useEffect(() => {\n        if (speechState === SpeechState.Recording) {\n            executeScroll();\n        }\n    }, [speechState]);\n\n    useEffect(() => {\n        setFormOpen(false);\n    }, [transactions]);\n\n    return (\n        <div>\n            <Header />\n            <Container maxWidth=\"lg\">\n                <Grid\n                    container\n                    spacing={2}\n                    // alignItems=\"center\"\n                    justifyContent=\"center\"\n                    sx={{ mt: '2em' }}\n                >\n                    <Grid item xs={12} sm={6} md={4} sx={{ order: { xs: 1, md: 0 } }}>\n                        <Details title={\"Income\"} />\n                    </Grid>\n                    <Grid ref={main} item xs={12} sm={12} md={4} sx={{ order: { xs: 0, md: 1 } }}>\n\n                        <Grid container spacing={2} direction=\"column\">\n                            <Grid item>\n                                <InfoBalance />\n                            </Grid>\n                            <Grid item>\n                                <Main />\n                            </Grid>\n                        </Grid>\n\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4} sx={{ order: { xs: 2, md: 2 } }}>\n                        <Details title={\"Expense\"} />\n                    </Grid>\n                </Grid>\n\n                <StyledFab\n                    color=\"primary\"\n                    aria-label=\"add\"\n                    sx={{\n                        right: { xs: 50, md: 100 },\n                        bottom: { xs: 50, md: 100 }\n                    }}\n                    onClick={handleFabClick}\n                >\n                    <AddIcon />\n                </StyledFab>\n\n            </Container>\n            \n            <Snackbar\n                open={isErrorSnackbarOpen}\n                autoHideDuration={3000}\n                onClose={() => setErrorSnackbarOpen(false)}\n            >\n                <Alert severity=\"error\" variant=\"filled\">All fields must be filled!</Alert>\n            </Snackbar>\n\n            <Snackbar\n                open={isSuccessSnackbarOpen}\n                autoHideDuration={3000}\n                onClose={() => setSuccessSnackbarOpen(false)}\n            >\n                <Alert severity=\"success\" variant=\"filled\">Transaction successfully created.</Alert>\n            </Snackbar>\n            \n            <Dialog maxWidth=\"xs\" open={isFormOpen} onClose={handleFabClose}>\n                <DialogContent>\n                    <Form \n                        setErrorSnackbarOpen={setErrorSnackbarOpen} \n                        setSuccessSnackbarOpen={setSuccessSnackbarOpen}\n                    />\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from './context/context';\n\nimport { SpeechProvider } from '@speechly/react-client'\n\nReactDOM.render(\n  <React.StrictMode>\n    <SpeechProvider appId=\"03a5d0b2-70a0-4e3f-b2cb-a0d2119ecd98\" language=\"en-US\">\n      <Provider>\n        <App />\n      </Provider>\n    </SpeechProvider>  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}